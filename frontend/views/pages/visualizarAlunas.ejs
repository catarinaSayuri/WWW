<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Lista de Alunas</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-color: #6a0dad;
      --secondary-color: #4C0D38;
      --accent-color: #ff69b4;
      --text-dark: #333;
      --text-light: #f4f4f4;
      --bg-light: #fcf2f3;
      --card-bg: #ffffff;
      --shadow-light: rgba(0, 0, 0, 0.1);
      --shadow-medium: rgba(0, 0, 0, 0.2);
      --modal-header-bg: #4C0D38;
      --modal-button-bg: #ff69b4;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background-color: var(--bg-light);
      margin: 0;
      padding: 0;
      color: var(--text-dark);
      line-height: 1.6;
    }

    header {
      background: #4C0D38;
      height: 80px;
      display: flex;
      align-items: center;
      padding: 0 25px;
      box-shadow: 0 4px 10px var(--shadow-medium);
      color: var(--text-light);
    }

    header img {
      height: 50px;
      margin-right: 15px;
    }

    h1 {
      color: #4C0D38;
      text-align: center;
      margin: 40px 0 10px;
      font-size: 2.5em;
      font-weight: 600;
    }

    .subtitulo {
      text-align: center;
      font-size: 1.2em;
      margin-bottom: 30px;
      color: var(--secondary-color);
      font-weight: 500;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
    }

    .add-button {
      position: fixed;
      bottom: 30px;
      right: 30px;
      background-color: var(--accent-color);
      color: var(--text-light);
      width: 60px;
      height: 60px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      text-decoration: none;
      font-size: 2em;
      font-weight: 600;
      transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
      box-shadow: 0 5px 15px var(--shadow-medium);
      z-index: 1000;
    }

    .add-button:hover {
      background-color: #e04b9c;
      transform: scale(1.1);
      box-shadow: 0 8px 20px var(--shadow-medium);
    }

    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 25px;
      padding-bottom: 80px;
      justify-items: center;
    }

    .card {
      background: var(--card-bg);
      padding: 25px;
      border-radius: 12px;
      box-shadow: 0 5px 15px var(--shadow-light);
      text-align: center;
      cursor: pointer;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      max-width: 220px;
    }

    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 20px var(--shadow-medium);
    }

    .card h2 {
      font-size: 1.6em;
      margin: 10px 0 5px;
      color: var(--primary-color);
      font-weight: 600;
    }

    .card p {
      font-size: 0.95em;
      color: #666;
      margin: 0;
    }

    .no-data {
      color: #888;
      text-align: center;
      font-style: italic;
      padding: 50px 0;
      font-size: 1.2em;
    }

    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.6);
      z-index: 1000;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      background: var(--modal-header-bg);
      padding: 0;
      border-radius: 12px;
      width: 600px;
      max-width: 90%;
      box-shadow: 0 5px 20px var(--shadow-medium);
      position: relative;
      text-align: left;
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }

    .modal-header {
      background: var(--modal-header-bg);
      color: var(--text-light);
      padding: 20px 25px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      border-radius: 12px 12px 0 0;
    }

    .modal-header h2 {
      font-size: 1.8em;
      margin: 0;
      font-weight: 600;
    }

    .modal-header p {
      font-size: 1em;
      margin: 0;
      opacity: 0.8;
    }

    .modal-body {
      padding: 25px;
      background: var(--card-bg);
      border-radius: 0 0 12px 12px;
      display: flex;
      flex-direction: column;
    }

    .modal-body .info {
      flex: 1;
      margin-left: 0;
    }

    .modal-body .info p {
      font-size: 1em;
      margin: 12px 0;
      color: var(--text-dark);
    }

    .modal-body .info p strong {
      color: #300129;
    }

    .modal-content .close-button {
      position: absolute;
      top: 20px;
      right: 20px;
      background: none;
      border: none;
      font-size: 2em;
      color: var(--text-light);
      cursor: pointer;
      transition: color 0.3s ease, transform 0.2s ease;
    }

    .modal-content .close-button:hover {
      color: #ffd700;
      transform: scale(1.1);
    }
  </style>
</head>
<body>
  <header>
    <img src="/frontend/views/assets/logoGrace.png" alt="Logo Borboleta" />
  </header>
  <div class="container">
    <h1>Grace Hopper</h1>
    <p class="subtitulo">A potência do Grace está em quem faz parte dele!</p>
    <a href="/adicionarAlunas" class="add-button">+</a>
    <div id="alunasContainer">
      <p class="no-data">Carregando alunas...</p>
    </div>
  </div>
  <div id="studentModal" class="modal">
    <div class="modal-content">
      <button class="close-button">&times;</button>
      <div class="modal-header">
        <div>
          <h2 id="modalName"></h2>
          <p id="modalCurso"></p>
        </div>
      </div>
      <div class="modal-body">
        <div class="info">
          <p><strong>Nome Completo:</strong> <span id="modalFullName"></span></p>
          <p><strong>Bio:</strong> <span id="modalBiografia"></span></p>
          <p><strong>Email:</strong> <span id="modalEmail"></span></p>
        </div>
      </div>
    </div>
  </div>
  <script>
    function criarCard(aluna) {
      const card = document.createElement('div');
      card.className = 'card';
      card.dataset.aluna = JSON.stringify(aluna);
      const nome = document.createElement('h2');
      nome.textContent = aluna.nome_exibicao || aluna.nome || 'Nome Não Informado';
      const info = document.createElement('p');
      info.textContent = `${aluna.curso || 'Curso Não Informado'} - ${aluna.semestre || 'Semestre Não Informado'}`;
      card.appendChild(nome);
      card.appendChild(info);
      card.addEventListener('click', () => openModal(aluna));
      return card;
    }

    function openModal(aluna) {
      console.log(aluna);
      const modal = document.getElementById('studentModal');
      const modalName = document.getElementById('modalName');
      const modalCurso = document.getElementById('modalCurso');
      const modalFullName = document.getElementById('modalFullName');
      const modalBiografia = document.getElementById('modalBiografia');
      const modalEmail = document.getElementById('modalEmail');

      modalName.textContent = aluna.nome_exibicao || aluna.nome || 'Sem nome';
      modalCurso.textContent = aluna.curso || 'Curso não informado';
      modalFullName.textContent = aluna.nome_aluna || 'Nome completo não informado';
      modalBiografia.textContent = aluna.bio || 'Sem biografia';
      modalEmail.textContent = aluna?.email || 'Sem e-mail';

      modal.style.display = 'flex';
    }

    function closeModal() {
      const modal = document.getElementById('studentModal');
      if (modal) {
        modal.style.display = 'none';
      }
    }

    async function carregarAlunas() {
      const container = document.getElementById('alunasContainer');
      container.innerHTML = '';
      try {
        const response = await fetch('/alunas');
        if (!response.ok) {
          throw new Error(`Erro ao buscar alunas: ${response.status} ${response.statusText}`);
        }
        const alunas = await response.json();
        console.log('Dados recebidos:', alunas);
        if (!alunas.data || !alunas.data.length) {
          container.innerHTML = '<p class="no-data">Nenhuma aluna cadastrada ainda.</p>';
          return;
        }
        const grid = document.createElement('div');
        grid.className = 'grid';
        alunas.data.forEach(aluna => {
          grid.appendChild(criarCard(aluna));
        });
        container.appendChild(grid);
      } catch (error) {
        console.error('Erro:', error);
        container.innerHTML = `<p class="no-data">Erro ao carregar alunas: ${error.message}. Tente novamente mais tarde.</p>`;
      }
    }

    // Event listeners
    document.getElementById('studentModal').addEventListener('click', (event) => {
      if (event.target === document.getElementById('studentModal')) {
        closeModal();
      }
    });

    document.querySelector('.close-button').addEventListener('click', closeModal);

    carregarAlunas();
  </script>
</body>
</html>